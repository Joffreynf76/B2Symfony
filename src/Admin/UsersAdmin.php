<?php
/**
 * Created by PhpStorm.
 * User: joffrey
 * Date: 2019-03-01
 * Time: 14:07
 */

namespace App\Admin;


 use App\Entity\Users;
 use Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Google\GoogleAuthenticatorInterface;
 use Sonata\AdminBundle\Admin\AbstractAdmin;
 use Sonata\AdminBundle\Datagrid\DatagridMapper;
 use Sonata\AdminBundle\Datagrid\ListMapper;
 use Sonata\AdminBundle\Form\FormMapper;
 use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
 use Symfony\Component\Form\Extension\Core\Type\DateType;
 use Symfony\Component\Form\Extension\Core\Type\HiddenType;
 use Symfony\Component\Form\Extension\Core\Type\TextType;
 use Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface;

 final class UsersAdmin extends AbstractAdmin
{


    public function __construct(string $code, string $class, string $baseControllerName, \Swift_Mailer $mailer)
    {
        parent::__construct($code, $class, $baseControllerName);
        $this->mailer = $mailer;




        
    }


     protected function configureFormFields(FormMapper $form)
    {


        $form->add('name',TextType::class);
        $form->add('firstname',TextType::class);
        $form->add('email',TextType::class);
        $form->add('city',TextType::class);
        $form->add('dateCreation',DateType::class);
        $form->add('roles',HiddenType::class,[
            'data'=>'ROLE_USER'
        ]);
        $form->add('active',CheckboxType::class,[
            'required'=>false
        ]);
        $form->add('isDoubleAuth',CheckboxType::class,[
            'required'=>false
        ]);
    }

     protected function configureDatagridFilters(DatagridMapper $datagridMapper)
     {
         $datagridMapper->add('name');
         $datagridMapper->add('firstname');
         $datagridMapper->add('email');
         $datagridMapper->add('city');
     }

     protected function configureListFields(ListMapper $listMapper)
     {
         $listMapper->addIdentifier('name');
         $listMapper->addIdentifier('firstname');
         $listMapper->addIdentifier('email');
         $listMapper->addIdentifier('city');
     }


     public function toString($object)
     {
         return $object instanceof Users
             ? $object->getEmail()
             : 'User';
     }

     public function postPersist($object)
     {
         parent::postPersist($object); // TODO: Change the autogenerated stub
         $bytes = random_bytes(5);
         $key = bin2hex($bytes);
         $hashKey = sha1($key);
         $email = $this->getForm()->get('email')->getData();
         $hashMail = sha1($email);

         $body = '<a href="localhost:8000/user/addPassword/'.$hashKey.'/'.$hashMail.'" target="_blank">CrÃ©er mot de passe</a><p>'.$key.'</p>';
         $message = (new \Swift_Message('Hello'))
             ->setFrom('admin@greenworld.com')
             ->setTo($email)
             ->setBody($body

                 );


         $this->mailer->send($message);


     }

 }